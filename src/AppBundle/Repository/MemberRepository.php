<?php

namespace AppBundle\Repository;

use AppBundle\Entity\Event;
use AppBundle\Entity\Member;
use Doctrine\ORM\NonUniqueResultException;
use Doctrine\ORM\NoResultException;
use Doctrine\ORM\Query\ResultSetMapping;
use Doctrine\ORM\Query\ResultSetMappingBuilder;

/**
 * MemberRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MemberRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * @return Member[]
     */
    public function findConfirm()
    {
        $query = $this->_em->createQuery('SELECT m FROM AppBundle:Member m WHERE m.status= :status ');
        $query->setParameter('status',Member::STATUS_CONFIRMED);
        return $query->getResult();
    }

    /**
     * @param $hash
     * @return Member
     * @throws NoResultException
     * @throws NonUniqueResultException
     */
    public function getByHash($hash)
    {
        $rsm = new ResultSetMappingBuilder($this->_em);
        $rsm->addRootEntityFromClassMetadata(Member::class, 'm');
        $query = $this->_em->createNativeQuery('SELECT m.* FROM members m WHERE status_id=:status and md5(id||\'\')= :hash', $rsm);
        $query->setParameter('status',Member::STATUS_WAITING_ON_CONFIRM);
        $query->setParameter('hash',$hash);
        return $query->getSingleResult();

    }

    /**
     * @param Event $event
     * @return mixed
     */
    public function countMaxMemberInGroup(Event $event)
    {
        $query = $this->_em->createQuery('SELECT count(m) as c FROM AppBundle:Member m JOIN m.babysitter b WHERE b.event=:event GROUP BY m.group ORDER BY c DESC');
        $query->setMaxResults(1);
        $query->setParameter('event',$event);
        try {
            $data = $query->getSingleScalarResult();
        } catch (NonUniqueResultException $e) {
            throw new \LogicException();
        } catch (NoResultException $e) {
            return 0;
        }
        return $data;
    }
}
